C51 COMPILER V9.60.0.0   CMT2300A_SPI                                                      03/16/2022 17:38:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CMT2300A_SPI
OBJECT MODULE PLACED IN .\STX0031_KeilC51\cmt2300a_spi.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE radio\cmt2300a_spi.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\user\inc;.\includ
                    -e;.\radio) DEBUG OBJECTEXTEND PRINT(.\STX0031_KeilC51\cmt2300a_spi.lst) TABS(2) OBJECT(.\STX0031_KeilC51\cmt2300a_spi.ob
                    -j)

line level    source

   1          #include "cmt2300a_spi.h"
   2          
   3          void cmt_delay(u16 n)
   4          {
   5   1           while(n--);
   6   1      }
   7          
   8          void cmt_spi3_delay_us(void)
   9          {
  10   1          xdata u16 n = 8;
  11   1          while(n--);
  12   1      }
  13          void cmt_spi3_delay(void)
  14          {
  15   1          xdata u16 n = 4;
  16   1          while(n--);
  17   1      }
  18          
  19          
  20          void cmt_spi3_init(void)
  21          {
  22   1          cmt_spi3_csb_1();
  23   1          cmt_spi3_csb_out();
  24   1          cmt_spi3_csb_1();   /* CSB has an internal pull-up resistor */
  25   1      
  26   1          cmt_spi3_scl_0();
  27   1          cmt_spi3_scl_out();
  28   1          cmt_spi3_scl_0();   /* SCL has an internal pull-down resistor */
  29   1      
  30   1          cmt_spi3_sda_1();
  31   1          cmt_spi3_sda_out();
  32   1          cmt_spi3_sda_1();
  33   1      
  34   1          cmt_spi3_fcsb_1();
  35   1          cmt_spi3_fcsb_out();
  36   1          cmt_spi3_fcsb_1();  /* FCSB has an internal pull-up resistor */
  37   1      
  38   1          cmt_spi3_delay();
  39   1      }
  40          
  41          void cmt_spi3_send(u8 data8)
  42          {
  43   1          xdata u8 i;
  44   1      
  45   1          for(i=0; i<8; i++)
  46   1          {
  47   2              cmt_spi3_scl_0();
  48   2      
  49   2              /* Send byte on the rising edge of SCL */
  50   2              if(data8 & 0x80)
  51   2              {
  52   3                  cmt_spi3_sda_1();
  53   3              }
C51 COMPILER V9.60.0.0   CMT2300A_SPI                                                      03/16/2022 17:38:03 PAGE 2   

  54   2              else
  55   2              {
  56   3                  cmt_spi3_sda_0();
  57   3              }
  58   2      
  59   2              cmt_spi3_delay();
  60   2      
  61   2              data8 <<= 1;
  62   2              cmt_spi3_scl_1();
  63   2              cmt_spi3_delay();
  64   2          }
  65   1      }
  66          
  67          u8 cmt_spi3_recv(void)
  68          {
  69   1          xdata u8 i;
  70   1          xdata u8 data8 = 0xFF;
  71   1      
  72   1          for(i=0; i<8; i++)
  73   1          {
  74   2              cmt_spi3_scl_0();
  75   2              cmt_spi3_delay();
  76   2              data8 <<= 1;
  77   2      
  78   2              cmt_spi3_scl_1();
  79   2      
  80   2              /* Read byte on the rising edge of SCL */
  81   2              if(cmt_spi3_sda_read())
  82   2              {
  83   3                  data8 |= 0x01;
  84   3              }
  85   2              else
  86   2              {
  87   3                  data8 &= ~0x01;
  88   3              }
  89   2      
  90   2              cmt_spi3_delay();
  91   2          }
  92   1      
  93   1          return data8;
  94   1      }
  95          
  96          void Cmt_Spi_Write(u8 addr, u8 dat)
  97          {
  98   1          cmt_spi3_sda_1();
  99   1          cmt_spi3_sda_out();
 100   1      
 101   1          cmt_spi3_scl_0();
 102   1          cmt_spi3_scl_out();
 103   1          cmt_spi3_scl_0();
 104   1      
 105   1          cmt_spi3_fcsb_1();
 106   1          cmt_spi3_fcsb_out();
 107   1          cmt_spi3_fcsb_1();
 108   1      
 109   1          cmt_spi3_csb_0();
 110   1      
 111   1          /* > 0.5 SCL cycle */
 112   1          cmt_spi3_delay();
 113   1          cmt_spi3_delay();
 114   1      
 115   1          /* r/w = 0 */
C51 COMPILER V9.60.0.0   CMT2300A_SPI                                                      03/16/2022 17:38:03 PAGE 3   

 116   1          cmt_spi3_send(addr&0x7F);
 117   1      
 118   1          cmt_spi3_send(dat);
 119   1      
 120   1          cmt_spi3_scl_0();
 121   1      
 122   1          /* > 0.5 SCL cycle */
 123   1          cmt_spi3_delay();
 124   1          cmt_spi3_delay();
 125   1      
 126   1          cmt_spi3_csb_1();
 127   1      
 128   1          cmt_spi3_sda_1();
 129   1          cmt_spi3_sda_in();
 130   1      
 131   1          cmt_spi3_fcsb_1();
 132   1      }
 133          
 134          void Cmt_Spi_Read(u8 addr, u8* p_dat)
 135          {
 136   1          cmt_spi3_sda_1();
 137   1          cmt_spi3_sda_out();
 138   1      
 139   1          cmt_spi3_scl_0();
 140   1          cmt_spi3_scl_out();
 141   1          cmt_spi3_scl_0();
 142   1      
 143   1          cmt_spi3_fcsb_1();
 144   1          cmt_spi3_fcsb_out();
 145   1          cmt_spi3_fcsb_1();
 146   1      
 147   1          cmt_spi3_csb_0();
 148   1      
 149   1          /* > 0.5 SCL cycle */
 150   1          cmt_spi3_delay();
 151   1          cmt_spi3_delay();
 152   1      
 153   1          /* r/w = 1 */
 154   1          cmt_spi3_send(addr|0x80);
 155   1      
 156   1          /* Must set SDA to input before the falling edge of SCL */
 157   1          cmt_spi3_sda_in();
 158   1      
 159   1          *p_dat = cmt_spi3_recv();
 160   1      
 161   1          cmt_spi3_scl_0();
 162   1      
 163   1          /* > 0.5 SCL cycle */
 164   1          cmt_spi3_delay();
 165   1          cmt_spi3_delay();
 166   1      
 167   1          cmt_spi3_csb_1();
 168   1      
 169   1          cmt_spi3_sda_1();
 170   1          cmt_spi3_sda_in();
 171   1      
 172   1          cmt_spi3_fcsb_1();
 173   1      }
 174          
 175          void Cmt_Spi_Write_Fifo(const u8* p_buf, u16 len)
 176          {
 177   1          xdata u16 i;
C51 COMPILER V9.60.0.0   CMT2300A_SPI                                                      03/16/2022 17:38:03 PAGE 4   

 178   1      
 179   1          cmt_spi3_fcsb_1();
 180   1          cmt_spi3_fcsb_out();
 181   1          cmt_spi3_fcsb_1();
 182   1      
 183   1          cmt_spi3_csb_1();
 184   1          cmt_spi3_csb_out();
 185   1          cmt_spi3_csb_1();
 186   1      
 187   1          cmt_spi3_scl_0();
 188   1          cmt_spi3_scl_out();
 189   1          cmt_spi3_scl_0();
 190   1      
 191   1          cmt_spi3_sda_out();
 192   1      
 193   1          for(i=0; i<len; i++)
 194   1          {
 195   2              cmt_spi3_fcsb_0();
 196   2      
 197   2              /* > 1 SCL cycle */
 198   2              cmt_spi3_delay();
 199   2              cmt_spi3_delay();
 200   2      
 201   2              cmt_spi3_send(p_buf[i]);
 202   2      
 203   2              cmt_spi3_scl_0();
 204   2      
 205   2              /* > 2 us */
 206   2              cmt_spi3_delay_us();
 207   2              cmt_spi3_delay_us();
 208   2              cmt_spi3_delay_us();
 209   2      
 210   2              cmt_spi3_fcsb_1();
 211   2      
 212   2              /* > 4 us */
 213   2              cmt_spi3_delay_us();
 214   2              cmt_spi3_delay_us();
 215   2              cmt_spi3_delay_us();
 216   2              cmt_spi3_delay_us();
 217   2              cmt_spi3_delay_us();
 218   2              cmt_spi3_delay_us();
 219   2          }
 220   1      
 221   1          cmt_spi3_sda_in();
 222   1      
 223   1          cmt_spi3_fcsb_1();
 224   1      }
 225          
 226          void Cmt_Spi_Read_Fifo(u8* p_buf, u16 len)
 227          {
 228   1          xdata u16 i;
 229   1      
 230   1          cmt_spi3_fcsb_1();
 231   1          cmt_spi3_fcsb_out();
 232   1          cmt_spi3_fcsb_1();
 233   1      
 234   1          cmt_spi3_csb_1();
 235   1          cmt_spi3_csb_out();
 236   1          cmt_spi3_csb_1();
 237   1      
 238   1          cmt_spi3_scl_0();
 239   1          cmt_spi3_scl_out();
C51 COMPILER V9.60.0.0   CMT2300A_SPI                                                      03/16/2022 17:38:03 PAGE 5   

 240   1          cmt_spi3_scl_0();
 241   1      
 242   1          cmt_spi3_sda_in();
 243   1      
 244   1          for(i=0; i<len; i++)
 245   1          {
 246   2              cmt_spi3_fcsb_0();
 247   2      
 248   2              /* > 1 SCL cycle */
 249   2              cmt_spi3_delay();
 250   2              cmt_spi3_delay();
 251   2      
 252   2              p_buf[i] = cmt_spi3_recv();
 253   2      
 254   2              cmt_spi3_scl_0();
 255   2      
 256   2              /* > 2 us */
 257   2              cmt_spi3_delay_us();
 258   2              cmt_spi3_delay_us();
 259   2              cmt_spi3_delay_us();
 260   2      
 261   2              cmt_spi3_fcsb_1();
 262   2      
 263   2              /* > 4 us */
 264   2              cmt_spi3_delay_us();
 265   2              cmt_spi3_delay_us();
 266   2              cmt_spi3_delay_us();
 267   2              cmt_spi3_delay_us();
 268   2              cmt_spi3_delay_us();
 269   2              cmt_spi3_delay_us();
 270   2          }
 271   1      
 272   1          cmt_spi3_sda_in();
 273   1      
 274   1          cmt_spi3_fcsb_1();
 275   1      }
 276          
 277          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    728    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
